# Makefile for lars utility
#
# LARS++, Copyright (C) 2007 Varun Ganapathi, David Vickery, James
# Diebel, Stanford University
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

##########################
# USER-DEFINED VARIABLES #
##########################

# Enter/select/uncomment the desired BLAS/CBLAS library flags
# Several common choices are provided, the first of these uses the 
# BLAS/CBLAS code provided with this distribution

#BLASLIBS = liblarscblas.a liblarsblas.a
BLASLIBS = libcblas.a libgoto.a 
#BLASLIBS = libcblas.a liblarsblas.a 

#BLASLIBS = $(HOME)/opt/lib/libcblas.a $(HOME)/opt/lib/libgoto.a

# (The user may also need to change the linker/compiler flags below.)

##############################
# END USER-DEFINED VARIABLES #
##############################

##########################################################
# Specify compilers, libraries, flags, and include paths #
##########################################################

LIB_LINKER      = ar
EXE_LINKER      = g++
COMPILER_MEX	= mex
COMPILER_CPP 	= g++
COMPILER_C 	= gcc
COMPILER_F 	= gcc#gfortran

# Libraries and library paths
LIBS	 = $(BLASLIBS) -lpthread -lm #-lgfortran

# Compiler flags
OPTIM    = -O3 -fPIC
CPPFLAGS = $(INC) -Wno-deprecated $(OPTIM)
CFLAGS	 = $(INC) $(OPTIM)
FFLAGS	 = $(INC) $(OPTIM)
MEXFLAGS = $(BLASLIBS) nist_spblas.o

# Include paths
INC 	= 

#################################
# Specify what files to compile #
#################################

# Source files to compile and archive
FSRC     = 
CSRC     = 
CPPSRC   = nist_spblas.cpp

################################
# Specify what targets to link #
################################

# Executables and library targets
EXES    = testlars
MEXLIB	= mexlars
LIB     = 

################################
# Specify code file extensions #
################################

# Object files are derived from the source file names this doesn't work!!
CPPOBJS	= $(CPPSRC:.cpp=.o) 
FOBJS   = $(FSRC:.f=.o)
COBJS   = $(CSRC:.c=.o)

# Default option is to do everything
all: $(EXES) $(LIB) $(MEXLIB)

#######################################
# Specify compiling and linking rules #
#######################################

# Compiler command for CPP
%.o: %.cpp
	@echo "** C++: Compiling '$*' **"
	$(COMPILER_CPP) $(CPPFLAGS) -c $<

# Compiler command for C
%.o: %.c
	@echo "** C: Compiling '$*' **"
	$(COMPILER_C) $(CFLAGS) -c $<

# Compiler command for G77
%.o: %.f
	@echo "** Fortran: Compiling '$*' **"
	$(COMPILER_F) $(FFLAGS) -c $<

# Compiler command for MEX
$(MEXLIB): $(MEXSRC) ${CPPOBJS} $(COBJS) $(FOBJS)
	@echo "  "
	@echo "** MEX: Compiling '$@' **"
	$(COMPILER_MEX) $(@:=.cpp) $(MEXFLAGS) 

# Execuatable Linker command
$(EXES): $(EXES:=.o) ${CPPOBJS} $(COBJS) $(FOBJS)
	@echo "  "
	@echo "** Linking '$@' **"
	$(EXE_LINKER) $(CPPOBJS) $(COBJS) $(FOBJS) $(@:=.o) $(LIBS) -o $@

# Library linker command
$(LIB): $(CPPOBJS) $(COBJS) $(FOBJS)
	@echo "  "
	@echo "** Linking library '$@' **"
	$(LIB_LINKER) rcs $@ $(CPPOBJS) $(COBJS) $(FOBJS)


#########################
# Clean and depend code #
#########################

# Delete all object files
clean:
	rm *.o

# Determine make dependencies
depend makedep: $(CPPSRC) $(FSRC) $(EXES:=.cpp)
	@echo making depend
	$(SHELL) -ec 'g++ -MM $^' > make.dep
	@echo done dependency list

# Include dependencies, as generated by 'make depend'
sinclude make.dep
# DO NOT DELETE
